{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./login.service\";\nexport class LoginComponent {\n  constructor(fb, loginService) {\n    this.fb = fb;\n    this.loginService = loginService;\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      console.log('Login attempt:', userName, password);\n      this.loginService.login(userName, password).subscribe(response => {\n        console.log('Login successful', response);\n      }, error => {\n        console.error('Login failed', error);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"id\", \"username\", \"formControlName\", \"username\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"password\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 7);\n          i0.ɵɵtext(13, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n  background: #f3f4f6;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 2rem;\\n  border-radius: 8px;\\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\\n  width: 300px;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 1rem;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 0.5rem;\\n  font-weight: bold;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.5rem;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.5rem;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n.login-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  background-color: #ccc;\\n  cursor: not-allowed;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFDSTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsMENBQUE7RUFDQSxZQUFBO0FBQ047QUFDTTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7QUFDUjtBQUVNO0VBQ0UsbUJBQUE7QUFBUjtBQUVRO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7QUFBVjtBQUdRO0VBQ0UsV0FBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0FBRFY7QUFLTTtFQUNFLFdBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUhSO0FBS1E7RUFDRSxzQkFBQTtFQUNBLG1CQUFBO0FBSFYiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGJhY2tncm91bmQ6ICNmM2Y0ZjY7XHJcbiAgXHJcbiAgICBmb3JtIHtcclxuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgYm94LXNoYWRvdzogMHB4IDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgICB3aWR0aDogMzAwcHg7XHJcbiAgXHJcbiAgICAgIGgyIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICAgICAgfVxyXG4gIFxyXG4gICAgICAuZm9ybS1ncm91cCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICBcclxuICAgICAgICBsYWJlbCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICBcclxuICAgICAgICBpbnB1dCB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIHBhZGRpbmc6IDAuNXJlbTtcclxuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIFxyXG4gICAgICAgICY6ZGlzYWJsZWQge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAe,EAAUC,YAA0B;IAAnD,OAAE,GAAFD,EAAE;IAAuB,iBAAY,GAAZC,YAAY;IACvD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,QAAQ,IAAU;EAElBC,QAAQ;IACN,IAAI,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACxB,MAAM;QAAEL,QAAQ;QAAEE;MAAQ,CAAE,GAAG,IAAI,CAACJ,SAAS,CAACQ,KAAK;MACnDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,EAAEP,QAAQ,CAAC;MAEjD,IAAI,CAACL,YAAY,CAACa,KAAK,CAACD,QAAQ,EAAEP,QAAQ,CAAC,CAACS,SAAS,CAClDC,QAAQ,IAAI;QACXL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,QAAQ,CAAC;MAC3C,CAAC,EACAC,KAAK,IAAI;QACRN,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,CAAC,CACF;;EAEL;;;uBA1BWnB,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAoB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCT3BC,8BAA6B;UACKA;YAAA,OAAYC,cAAU;UAAA,EAAC;UACnDD,0BAAI;UAAAA,qBAAK;UAAAA,iBAAK;UACdA,8BAAwB;UACAA,wBAAQ;UAAAA,iBAAQ;UACtCA,2BAAmF;UACrFA,iBAAM;UACNA,8BAAwB;UACAA,yBAAQ;UAAAA,iBAAQ;UACtCA,4BAAuF;UACzFA,iBAAM;UACNA,kCAAoD;UAAAA,sBAAK;UAAAA,iBAAS;;;UAV9DA,eAAuB;UAAvBA,yCAAuB;UAULA,gBAA6B;UAA7BA,+CAA6B","names":["Validators","LoginComponent","constructor","fb","loginService","loginForm","group","username","required","password","ngOnInit","onSubmit","valid","value","console","log","userName","login","subscribe","response","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\W\\FL\\Barber\\BarberShop\\Angular\\barber-shop\\src\\app\\login\\login.component.ts","C:\\Users\\Admin\\Desktop\\W\\FL\\Barber\\BarberShop\\Angular\\barber-shop\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from './login.service';  // Import your LoginService\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private loginService: LoginService) {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value;\n      console.log('Login attempt:', userName, password);\n\n      this.loginService.login(userName, password).subscribe(\n        (response) => {\n          console.log('Login successful', response);\n        },\n        (error) => {\n          console.error('Login failed', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"login-container\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <h2>Login</h2>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input id=\"username\" formControlName=\"username\" type=\"text\" class=\"form-control\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input id=\"password\" formControlName=\"password\" type=\"password\" class=\"form-control\" />\n      </div>\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}