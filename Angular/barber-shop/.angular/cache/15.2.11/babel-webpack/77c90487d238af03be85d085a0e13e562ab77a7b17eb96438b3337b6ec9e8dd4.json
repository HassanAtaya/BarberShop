{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    // private loginUrl = 'http://localhost:8080/api/login';\n    this.loginUrl = 'http://52.58.132.247:8080/api/login';\n  }\n  login(userName, password) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post(this.loginUrl, {\n      userName,\n      password\n    }, {\n      headers\n    });\n  }\n  static {\n    this.ɵfac = function LoginService_Factory(t) {\n      return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoginService,\n      factory: LoginService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,YAAY;EAKrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB;IACQ,aAAQ,GAAG,qCAAqC;EAEhB;EAExCC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACpC,MAAMC,OAAO,GAAG,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAAEL,QAAQ;MAAEC;IAAQ,CAAE,EAAE;MAAEC;IAAO,CAAE,CAAC;EAC7E;;;uBAVSN,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAU,SAAZV,YAAY;MAAAW,YAFT;IAAM;EAAA","names":["HttpHeaders","LoginService","constructor","http","login","userName","password","headers","set","post","loginUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\W\\FL\\Barber\\BarberShop\\Angular\\barber-shop\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n    // private loginUrl = 'http://localhost:8080/api/login';\r\n    private loginUrl = 'http://52.58.132.247:8080/api/login';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(userName: string, password: string): Observable<any> {\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n        return this.http.post(this.loginUrl, { userName, password }, { headers });\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}