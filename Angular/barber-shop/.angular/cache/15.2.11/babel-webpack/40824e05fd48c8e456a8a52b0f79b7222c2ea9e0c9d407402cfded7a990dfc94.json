{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://localhost:8080/api/login'; // Replace with your actual login API URL\n  }\n\n  login(username, password) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json'); // Set content type to JSON for POST requests\n    return this.http.post(this.loginUrl, {\n      username,\n      password\n    }, {\n      headers\n    });\n  }\n  static {\n    this.ɵfac = function LoginService_Factory(t) {\n      return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoginService,\n      factory: LoginService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,aAAQ,GAAG,iCAAiC,CAAC,CAAC;EAEf;;EAEvCC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,OAAO,GAAG,IAAIC,WAAW,EAAE,CAC9BC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAC5C,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAAEN,QAAQ;MAAEC;IAAQ,CAAE,EAAE;MAAEC;IAAO,CAAE,CAAC;EAC3E;;;uBAVWN,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAW,SAAZX,YAAY;MAAAY,YAFX;IAAM;EAAA","names":["LoginService","constructor","http","login","username","password","headers","HttpHeaders","set","post","loginUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\W\\FL\\Barber\\BarberShop\\Angular\\barber-shop\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private loginUrl = 'http://localhost:8080/api/login'; // Replace with your actual login API URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/json'); // Set content type to JSON for POST requests\r\n    return this.http.post(this.loginUrl, { username, password }, { headers });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}